name: Test and Coverage (with WireMock)

on:
  push:
    branches: [main]
  pull_request:
    types: [edited, opened, synchronize, reopened, ready_for_review]

jobs:
  test:
    runs-on: sfdc-hk-ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Download WireMock standalone jar
        run: |
          curl -L -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-jre8-standalone/2.35.0/wiremock-jre8-standalone-2.35.0.jar

      - name: Start WireMock
        run: |
          java -jar wiremock.jar --port 8080 &
          echo $! > wiremock.pid
        timeout-minutes: 1

      - name: Wait for WireMock to be ready
        run: |
          for i in {1..10}; do
            if curl --silent http://localhost:8080/__admin; then exit 0; fi
            sleep 1
          done
          echo "WireMock did not start in time" >&2
          exit 1

      - name: Run tests with coverage
        run: yarn test:coverage

      - name: Stop WireMock
        run: |
          kill $(cat wiremock.pid)

      - name: Enforce ≥80% coverage
        run: |
          node -e "
          const { readFileSync } = require('fs');
          const { total } = JSON.parse(readFileSync('./coverage/coverage-summary.json', 'utf8'));
          const thresholds = { lines: 80, statements: 80, functions: 80, branches: 80 };
          const failed = Object.entries(thresholds)
            .filter(([metric, threshold]) => total[metric].pct < threshold)
            .map(([metric]) => metric);
          if (failed.length > 0) {
            console.error('❌ Coverage below 80% for:', failed.join(', '));
            process.exit(1);
          } else {
            console.log('✅ Coverage check passed.');
          }
          "
